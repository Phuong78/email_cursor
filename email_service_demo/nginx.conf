server {
    listen 8080;
    server_name localhost;

    # Cấu hình CORS chung cho tất cả các location
    # Điều này cho phép React UI (chạy ở localhost:3000) có thể gọi tới
    add_header 'Access-Control-Allow-Origin' 'http://localhost:3000' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
    add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
    add_header 'Access-Control-Allow-Credentials' 'true' always;

    # Xử lý các request OPTIONS (CORS preflight)
    if ($request_method = 'OPTIONS') {
        return 204;
    }

    # ==========================================================
    # Cấu hình location cho Jenkins
    # Mọi request đến http://localhost:8080/jenkins/ sẽ được chuyển tiếp tới container Jenkins
    # ==========================================================
    location /jenkins/ {
        # Xóa tiền tố /jenkins/ khỏi URL trước khi gửi đến container Jenkins
        # Ví dụ: /jenkins/abc -> /abc
        rewrite /jenkins/(.*) /$1 break;
        
        # Chuyển tiếp request đến dịch vụ jenkins tại port 8080 (bên trong mạng Docker)
        proxy_pass http://jenkins:8080;
        
        # Các header cần thiết để Jenkins hoạt động đúng sau proxy
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Trong tương lai, bạn có thể thêm location cho n8n ở đây
    # location /n8n/ {
    #     rewrite /n8n/(.*) /$1 break;
    #     proxy_pass http://n8n:5678;
    #     ...
    # }

    # Bất kỳ request nào không khớp sẽ báo lỗi 404
    # (Bạn có thể thay đổi để trỏ đến UI sau này)
    location / {
        return 404;
    }
}